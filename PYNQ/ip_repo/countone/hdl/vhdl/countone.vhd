-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity countone is
generic (
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    rand_in_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    rand_in_TVALID : IN STD_LOGIC;
    rand_in_TREADY : OUT STD_LOGIC;
    s_axi_ctrl_AWVALID : IN STD_LOGIC;
    s_axi_ctrl_AWREADY : OUT STD_LOGIC;
    s_axi_ctrl_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_ctrl_WVALID : IN STD_LOGIC;
    s_axi_ctrl_WREADY : OUT STD_LOGIC;
    s_axi_ctrl_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_ctrl_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_ctrl_ARVALID : IN STD_LOGIC;
    s_axi_ctrl_ARREADY : OUT STD_LOGIC;
    s_axi_ctrl_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_ctrl_RVALID : OUT STD_LOGIC;
    s_axi_ctrl_RREADY : IN STD_LOGIC;
    s_axi_ctrl_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_ctrl_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_ctrl_BVALID : OUT STD_LOGIC;
    s_axi_ctrl_BREADY : IN STD_LOGIC;
    s_axi_ctrl_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of countone is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "countone_countone,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.185000,HLS_SYN_LAT=774909,HLS_SYN_TPT=none,HLS_SYN_MEM=7,HLS_SYN_DSP=0,HLS_SYN_FF=863,HLS_SYN_LUT=1531,HLS_VERSION=2021_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal freq4_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal freq4_V_ce0 : STD_LOGIC;
    signal freq4_V_we0 : STD_LOGIC;
    signal freq4_V_d0 : STD_LOGIC_VECTOR (12 downto 0);
    signal freq4_V_q0 : STD_LOGIC_VECTOR (12 downto 0);
    signal freq5_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal freq5_V_ce0 : STD_LOGIC;
    signal freq5_V_we0 : STD_LOGIC;
    signal freq5_V_d0 : STD_LOGIC_VECTOR (12 downto 0);
    signal freq5_V_q0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_ap_start : STD_LOGIC;
    signal grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_ap_done : STD_LOGIC;
    signal grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_ap_idle : STD_LOGIC;
    signal grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_ap_ready : STD_LOGIC;
    signal grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq5_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq5_V_ce0 : STD_LOGIC;
    signal grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq5_V_we0 : STD_LOGIC;
    signal grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq5_V_d0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq4_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq4_V_ce0 : STD_LOGIC;
    signal grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq4_V_we0 : STD_LOGIC;
    signal grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq4_V_d0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_ap_start : STD_LOGIC;
    signal grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_ap_done : STD_LOGIC;
    signal grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_ap_idle : STD_LOGIC;
    signal grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_ap_ready : STD_LOGIC;
    signal grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_rand_in_TREADY : STD_LOGIC;
    signal grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq4_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq4_V_ce0 : STD_LOGIC;
    signal grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq4_V_we0 : STD_LOGIC;
    signal grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq4_V_d0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq5_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq5_V_ce0 : STD_LOGIC;
    signal grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq5_V_we0 : STD_LOGIC;
    signal grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq5_V_d0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_ap_start : STD_LOGIC;
    signal grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_ap_done : STD_LOGIC;
    signal grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_ap_idle : STD_LOGIC;
    signal grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_ap_ready : STD_LOGIC;
    signal grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_freq5_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_freq5_V_ce0 : STD_LOGIC;
    signal grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_freq4_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_freq4_V_ce0 : STD_LOGIC;
    signal grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_chsq_V_2_out : STD_LOGIC_VECTOR (37 downto 0);
    signal grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_chsq_V_2_out_ap_vld : STD_LOGIC;
    signal grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_NS_fsm_state5 : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_fu_96_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_fu_104_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal regslice_both_rand_in_U_apdone_blk : STD_LOGIC;
    signal rand_in_TDATA_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal rand_in_TVALID_int_regslice : STD_LOGIC;
    signal rand_in_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_rand_in_U_ack_in : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component countone_countone_Pipeline_VITIS_LOOP_59_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        freq5_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        freq5_V_ce0 : OUT STD_LOGIC;
        freq5_V_we0 : OUT STD_LOGIC;
        freq5_V_d0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        freq4_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        freq4_V_ce0 : OUT STD_LOGIC;
        freq4_V_we0 : OUT STD_LOGIC;
        freq4_V_d0 : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component countone_countone_Pipeline_VITIS_LOOP_65_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rand_in_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        rand_in_TVALID : IN STD_LOGIC;
        rand_in_TREADY : OUT STD_LOGIC;
        freq4_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        freq4_V_ce0 : OUT STD_LOGIC;
        freq4_V_we0 : OUT STD_LOGIC;
        freq4_V_d0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        freq4_V_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
        freq5_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        freq5_V_ce0 : OUT STD_LOGIC;
        freq5_V_we0 : OUT STD_LOGIC;
        freq5_V_d0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        freq5_V_q0 : IN STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component countone_countone_Pipeline_VITIS_LOOP_92_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        freq5_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        freq5_V_ce0 : OUT STD_LOGIC;
        freq5_V_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
        freq4_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        freq4_V_ce0 : OUT STD_LOGIC;
        freq4_V_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
        chsq_V_2_out : OUT STD_LOGIC_VECTOR (37 downto 0);
        chsq_V_2_out_ap_vld : OUT STD_LOGIC );
    end component;


    component countone_freq4_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (12 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component countone_freq5_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (12 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component countone_ctrl_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ap_return : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component countone_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    freq4_V_U : component countone_freq4_V
    generic map (
        DataWidth => 13,
        AddressRange => 625,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => freq4_V_address0,
        ce0 => freq4_V_ce0,
        we0 => freq4_V_we0,
        d0 => freq4_V_d0,
        q0 => freq4_V_q0);

    freq5_V_U : component countone_freq5_V
    generic map (
        DataWidth => 13,
        AddressRange => 3125,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => freq5_V_address0,
        ce0 => freq5_V_ce0,
        we0 => freq5_V_we0,
        d0 => freq5_V_d0,
        q0 => freq5_V_q0);

    grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64 : component countone_countone_Pipeline_VITIS_LOOP_59_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_ap_start,
        ap_done => grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_ap_done,
        ap_idle => grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_ap_idle,
        ap_ready => grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_ap_ready,
        freq5_V_address0 => grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq5_V_address0,
        freq5_V_ce0 => grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq5_V_ce0,
        freq5_V_we0 => grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq5_V_we0,
        freq5_V_d0 => grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq5_V_d0,
        freq4_V_address0 => grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq4_V_address0,
        freq4_V_ce0 => grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq4_V_ce0,
        freq4_V_we0 => grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq4_V_we0,
        freq4_V_d0 => grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq4_V_d0);

    grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72 : component countone_countone_Pipeline_VITIS_LOOP_65_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_ap_start,
        ap_done => grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_ap_done,
        ap_idle => grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_ap_idle,
        ap_ready => grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_ap_ready,
        rand_in_TDATA => rand_in_TDATA_int_regslice,
        rand_in_TVALID => rand_in_TVALID_int_regslice,
        rand_in_TREADY => grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_rand_in_TREADY,
        freq4_V_address0 => grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq4_V_address0,
        freq4_V_ce0 => grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq4_V_ce0,
        freq4_V_we0 => grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq4_V_we0,
        freq4_V_d0 => grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq4_V_d0,
        freq4_V_q0 => freq4_V_q0,
        freq5_V_address0 => grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq5_V_address0,
        freq5_V_ce0 => grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq5_V_ce0,
        freq5_V_we0 => grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq5_V_we0,
        freq5_V_d0 => grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq5_V_d0,
        freq5_V_q0 => freq5_V_q0);

    grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82 : component countone_countone_Pipeline_VITIS_LOOP_92_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_ap_start,
        ap_done => grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_ap_done,
        ap_idle => grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_ap_idle,
        ap_ready => grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_ap_ready,
        freq5_V_address0 => grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_freq5_V_address0,
        freq5_V_ce0 => grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_freq5_V_ce0,
        freq5_V_q0 => freq5_V_q0,
        freq4_V_address0 => grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_freq4_V_address0,
        freq4_V_ce0 => grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_freq4_V_ce0,
        freq4_V_q0 => freq4_V_q0,
        chsq_V_2_out => grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_chsq_V_2_out,
        chsq_V_2_out_ap_vld => grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_chsq_V_2_out_ap_vld);

    ctrl_s_axi_U : component countone_ctrl_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_ctrl_AWVALID,
        AWREADY => s_axi_ctrl_AWREADY,
        AWADDR => s_axi_ctrl_AWADDR,
        WVALID => s_axi_ctrl_WVALID,
        WREADY => s_axi_ctrl_WREADY,
        WDATA => s_axi_ctrl_WDATA,
        WSTRB => s_axi_ctrl_WSTRB,
        ARVALID => s_axi_ctrl_ARVALID,
        ARREADY => s_axi_ctrl_ARREADY,
        ARADDR => s_axi_ctrl_ARADDR,
        RVALID => s_axi_ctrl_RVALID,
        RREADY => s_axi_ctrl_RREADY,
        RDATA => s_axi_ctrl_RDATA,
        RRESP => s_axi_ctrl_RRESP,
        BVALID => s_axi_ctrl_BVALID,
        BREADY => s_axi_ctrl_BREADY,
        BRESP => s_axi_ctrl_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        ap_return => ap_return);

    regslice_both_rand_in_U : component countone_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => rand_in_TDATA,
        vld_in => rand_in_TVALID,
        ack_in => regslice_both_rand_in_U_ack_in,
        data_out => rand_in_TDATA_int_regslice,
        vld_out => rand_in_TVALID_int_regslice,
        ack_out => rand_in_TREADY_int_regslice,
        apdone_blk => regslice_both_rand_in_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_ap_ready = ap_const_logic_1)) then 
                    grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_ap_ready = ap_const_logic_1)) then 
                    grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state5) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_ap_ready = ap_const_logic_1)) then 
                    grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_ap_done, grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_ap_done, grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_NS_fsm_state5 <= ap_NS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_ap_done)
    begin
        if ((grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_ap_done)
    begin
        if ((grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_ap_done)
    begin
        if ((grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        ap_const_lv32_FFFFFFFF when (tmp_fu_96_p3(0) = '1') else 
        ret_fu_104_p4;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    freq4_V_address0_assign_proc : process(grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq4_V_address0, grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq4_V_address0, grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_freq4_V_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            freq4_V_address0 <= grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_freq4_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            freq4_V_address0 <= grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq4_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            freq4_V_address0 <= grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq4_V_address0;
        else 
            freq4_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    freq4_V_ce0_assign_proc : process(grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq4_V_ce0, grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq4_V_ce0, grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_freq4_V_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            freq4_V_ce0 <= grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_freq4_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            freq4_V_ce0 <= grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq4_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            freq4_V_ce0 <= grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq4_V_ce0;
        else 
            freq4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    freq4_V_d0_assign_proc : process(grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq4_V_d0, grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq4_V_d0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            freq4_V_d0 <= grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq4_V_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            freq4_V_d0 <= grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq4_V_d0;
        else 
            freq4_V_d0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    freq4_V_we0_assign_proc : process(grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq4_V_we0, grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq4_V_we0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            freq4_V_we0 <= grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq4_V_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            freq4_V_we0 <= grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq4_V_we0;
        else 
            freq4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    freq5_V_address0_assign_proc : process(grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq5_V_address0, grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq5_V_address0, grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_freq5_V_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            freq5_V_address0 <= grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_freq5_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            freq5_V_address0 <= grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq5_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            freq5_V_address0 <= grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq5_V_address0;
        else 
            freq5_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    freq5_V_ce0_assign_proc : process(grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq5_V_ce0, grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq5_V_ce0, grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_freq5_V_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            freq5_V_ce0 <= grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_freq5_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            freq5_V_ce0 <= grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq5_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            freq5_V_ce0 <= grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq5_V_ce0;
        else 
            freq5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    freq5_V_d0_assign_proc : process(grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq5_V_d0, grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq5_V_d0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            freq5_V_d0 <= grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq5_V_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            freq5_V_d0 <= grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq5_V_d0;
        else 
            freq5_V_d0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    freq5_V_we0_assign_proc : process(grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq5_V_we0, grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq5_V_we0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            freq5_V_we0 <= grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_freq5_V_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            freq5_V_we0 <= grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_freq5_V_we0;
        else 
            freq5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_ap_start <= grp_countone_Pipeline_VITIS_LOOP_59_1_fu_64_ap_start_reg;
    grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_ap_start <= grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_ap_start_reg;
    grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_ap_start <= grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_ap_start_reg;
    rand_in_TREADY <= regslice_both_rand_in_U_ack_in;

    rand_in_TREADY_int_regslice_assign_proc : process(grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_rand_in_TREADY, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rand_in_TREADY_int_regslice <= grp_countone_Pipeline_VITIS_LOOP_65_2_fu_72_rand_in_TREADY;
        else 
            rand_in_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    ret_fu_104_p4 <= grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_chsq_V_2_out(37 downto 6);
    tmp_fu_96_p3 <= grp_countone_Pipeline_VITIS_LOOP_92_3_fu_82_chsq_V_2_out(37 downto 37);
end behav;
